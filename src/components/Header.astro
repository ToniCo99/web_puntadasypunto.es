---
import { Image } from 'astro:assets';

const currentPath = Astro.url.pathname;

const navigation = [
  { name: 'Inicio', href: '/' },
  { name: 'Quiénes somos', href: '/quienes-somos/' },
  { name: 'Servicios', href: '/servicios/' },
  { name: 'Galería', href: '/galeria/' },
  { name: 'Blog', href: '/blog/' },
  { name: 'Contacto', href: '/contacto/' }
];
---

<header class="bg-white shadow-sm border-b border-burgundy-100" role="banner">
  <nav class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8" aria-label="Navegación principal">
    <div class="flex justify-between items-center h-20">
      <!-- Logo -->
      <div class="flex-shrink-0">
        <a href="/" class="flex items-center" aria-label="Puntadas y Punto - Inicio">
          <img 
            src="/images/logo-puntadas-y-punto.png" 
            alt="Puntadas y Punto - Taller de costura en Córdoba"
            class="h-12 w-auto"
            width="180"
            height="48"
          />
        </a>
      </div>

      <!-- Navigation Desktop -->
      <div class="hidden md:block">
        <div class="ml-10 flex items-baseline space-x-4">
          {navigation.map((item) => (
            <a
              href={item.href}
              class={`px-3 py-2 rounded-md text-sm font-medium transition-colors duration-200 ${
                currentPath === item.href
                  ? 'bg-burgundy-100 text-burgundy-900'
                  : 'text-gray-700 hover:text-burgundy-700 hover:bg-burgundy-50'
              }`}
              aria-current={currentPath === item.href ? 'page' : undefined}
            >
              {item.name}
            </a>
          ))}
        </div>
      </div>

      <!-- CTA Button -->
      <div class="hidden md:block">
        <a
          href="/contacto/"
          class="bg-burgundy-700 hover:bg-burgundy-800 text-white px-6 py-2 rounded-md text-sm font-medium transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-burgundy-500 focus:ring-offset-2"
        >
          Contactar
        </a>
      </div>

      <!-- Mobile menu button -->
      <div class="md:hidden">
        <button
          type="button"
          class="mobile-menu-button bg-white p-2 rounded-md text-gray-400 hover:text-gray-500 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-burgundy-500"
          aria-controls="mobile-menu"
          aria-expanded="false"
        >
          <span class="sr-only">Abrir menú principal</span>
          <!-- Menu icon -->
          <svg class="h-6 w-6" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" aria-hidden="true">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
          </svg>
        </button>
      </div>
    </div>

    <!-- Mobile menu -->
    <div class="mobile-menu hidden md:hidden" id="mobile-menu">
      <div class="px-2 pt-2 pb-3 space-y-1 sm:px-3 border-t border-gray-200">
        {navigation.map((item) => (
          <a
            href={item.href}
            class={`block px-3 py-2 rounded-md text-base font-medium transition-colors duration-200 ${
              currentPath === item.href
                ? 'bg-burgundy-100 text-burgundy-900'
                : 'text-gray-700 hover:text-burgundy-700 hover:bg-burgundy-50'
            }`}
            aria-current={currentPath === item.href ? 'page' : undefined}
          >
            {item.name}
          </a>
        ))}
        <a
          href="/contacto/"
          class="block w-full bg-burgundy-700 hover:bg-burgundy-800 text-white px-3 py-2 rounded-md text-base font-medium transition-colors duration-200 mt-4"
        >
          Contactar
        </a>
      </div>
    </div>
  </nav>
</header>

<script>
  // Mobile menu functionality
  document.addEventListener('DOMContentLoaded', function() {
    const mobileMenuButton = document.querySelector('.mobile-menu-button');
    const mobileMenu = document.querySelector('.mobile-menu');
    
    if (mobileMenuButton && mobileMenu) {
      mobileMenuButton.addEventListener('click', function() {
        const isExpanded = mobileMenuButton.getAttribute('aria-expanded') === 'true';
        
        mobileMenuButton.setAttribute('aria-expanded', (!isExpanded).toString());
        mobileMenu.classList.toggle('hidden');
      });
    }
  });
</script>
